name: learn-github-actions

run-name: ${{ github.actor }} creating pi-image
on: [push]

jobs:
  check-bats-version:
    runs-on: ubuntu-latest 
    # runs-on: self-hosted
    steps:
    - uses: usimd/pi-gen-action@v1
      with:
        # Compression to apply on final image (either "none", "zip", "xz" or "gz").
        compression: xz

        # Compression level to be used. From 0 to 9 (refer to the tool man page for more 
        # information on this. Usually 0 is no compression but very fast, up to 9 with the 
        # best compression but very slow).
        compression-level: 6

        # Disable the renaming of the first user during the first boot. This make it so 
        # 'username' stays activated. 'username' must be set for this to work. Please be 
        # aware of the implied security risk of defining a default username and password 
        # for your devices.
        disable-first-boot-user-rename: 0

        # Additional options to include in PIGEN_DOCKER_OPTS
        docker-opts: ''

        # Set whether a NOOBS image should be built as well. If enabled, the output 
        # directory containing the NOOBS files will be saved as output variable 
        # 'image-noobs-path'.
        enable-noobs: false

        # Enable SSH access to Pi.
        enable-ssh: 1

        # If this feature is enabled, the action will configure pi-gen to not export any 
        # stage as image but the last one defined in property 'stage-list'. This is 
        # helpful when building a single image flavor (in contrast to building a 
        # lite/server and full-blown desktop image), since it speeds up the build process 
        # significantly.
        export-last-stage-only: true

        # Comma or whitespace separated list of additional packages to install on host 
        # before running pi-gen. Use this list to add any packages your custom stages may 
        # require. Note that this is not affecting the final image. In order to add 
        # additional packages, you need to add a respective 'XX-packages' file in your 
        # custom stage.
        extra-host-dependencies: ''

        # Comma or whitespace separated list of additional modules to load on host before 
        # running pi-gen. If your custom stage requires additional software or kernel 
        # modules to be loaded, add them here. Note that this is not meant to configure 
        # modules to be loaded in the target image.
        extra-host-modules: ''

        # Token to use for checking out pi-gen repo.
        github-token: ${{ github.token }}

        # Host name of the image.
        hostname: rasqberry-two

        # Final image name.
        image-name: 'rasqberry-$RELEASE-$ARCH'

        # Enabling this option will remove plenty of components from the GitHub Actions 
        # runner that are not mandatory pre-requisites for a (vanilla) pi-gen build. This 
        # shall increase the available disk space so that also large images can be 
        # compiled on a free GHA runner (benchmark is the full image including a desktop 
        # environment). If any packages are missing during the build consider adding them 
        # to the `extra-host-dependencies` list.
        increase-runner-disk-size: false

        # Default keyboard keymap.
        keyboard-keymap: de

        # Default keyboard layout.
        keyboard-layout: English (UK)

        # Default locale of the system image.
        locale: en_GB.UTF-8

        # Password of the intial user account, locked if empty.
        password: 'Qiskit1!'

        # Path where selected pi-gen ref will be checked out to. If the path does not yet 
        # exist, it will be created (including its parents).
        pi-gen-dir: pi-gen

        # The release name to use in `/etc/issue.txt`. The default should only be used for 
        # official Raspberry Pi builds.
        pi-gen-release: Raspberry Pi reference

        # GitHub repository to fetch pi-gen from, must be a fork from RPi-Distro/pi-gen.
        pi-gen-repository: JanLahmann/RasQberry-pi-gen

        # Release version of pi-gen to use. This can both be a branch or tag name known in 
        # the pi-gen repository.
        pi-gen-version: 30-sw-platform

        # Setting to `1` will disable password authentication for SSH and enable public 
        # key authentication. Note that if SSH is not enabled this will take effect when 
        # SSH becomes enabled.
        # pubkey-only-ssh: 0

        # Setting this to a value will make that value the contents of the 
        # FIRST_USER_NAME's ~/.ssh/authorized_keys. Obviously the value should therefore 
        # be a valid authorized_keys file. Note that this does not automatically enable 
        # SSH.
        # pubkey-ssh-first-user: ''

        # The release version to build images against. Valid values are jessie, stretch, 
        # buster, bullseye, bookworm, and testing.
        release: bookworm

        # Setting to `1` will prevent pi-gen from dropping the "capabilities" feature. 
        # Generating the root filesystem with capabilities enabled and running it from a 
        # filesystem that does not support capabilities (like NFS) can cause issues. Only 
        # enable this if you understand what it is.
        setfcap: ''

        # List of stage name to execute in given order. Relative and absolute paths to 
        # custom stage directories are allowed here. Note that by default pi-gen exports 
        # images in stage2 (lite), stage4 and stage5. You probably want to hook in custom 
        # stages before one of the exported stages. Otherwise, the action will make sure 
        # any custom stage will include an image export directive.
        stage-list: stage0 stage1 stage2

        # System timezone.
        timezone: Europe/London

        # Name of the initial user account.
        username: rasqberry

        # Print all output from pi-gen.
        verbose-output: false

        # Wifi country code of default network to connect to.
        wpa-country: ''

        # SSID of a default wifi network to connect to.
        wpa-essid: ''

        # Password of default wifi network to connect to.
        wpa-password: ''
  pi-gen-upload-image:
    runs-on: ubuntu-latest
    steps:
      - uses: usimd/pi-gen-action@v1
        id: build
        with:
          image-name: test

      - uses: actions/upload-artifact@v3
        with:
          name: pi-gen-image
          path: ${{ steps.build.outputs.image-path }}
      
